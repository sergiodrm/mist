// Autogenerated code for Mist project
// Header file

#pragma once
#include <string.h>
#include "Core/Debug.h"
namespace Mist
{
	enum eResourceType
	{
		RenderResource_Mesh,
		RenderResource_Model,
		RenderResource_Material,
		RenderResource_Texture,
		RenderResource_RenderTarget,
	};
	const char* GetRenderResourceTypeStr(eResourceType type);

	template <eResourceType RType>
	class cRenderResource
	{
	public:
		static constexpr uint32_t ResourceNameLength = 256;

		cRenderResource() : m_name{ 0 } 
		{
			char buff[ResourceNameLength];
			static int c = 0;
			sprintf_s(buff, "%s_%d", GetRenderResourceTypeStr(RType), c++);
			SetName(buff);
		}

		const char* GetName() const { return m_name; }

		void SetName(const char* str) 
		{ 
			check(*str); 
			check(strlen(str) <= ResourceNameLength);
			strcpy_s(m_name, str); 
		}
		inline constexpr eResourceType GetType() const { return RType; }
	private:
		char m_name[ResourceNameLength];
	};
}
