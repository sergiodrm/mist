#version 460

struct Particle
{
    vec2 Position;
    vec2 Velocity;
    vec4 Color;
};

layout (std140, binding = 0) uniform ParameterUBO
{
    float DeltaTime;
    float Speed;
    float MaxSpeed;
};

layout (std140, binding = 1) readonly buffer ParticleSSBOIn
{
    Particle ParticlesIn[];
};

layout(std140, binding = 2) buffer ParticleSSBOOut
{
    Particle ParticlesOut[];
};

layout (local_size_x= 256, local_size_y = 1, local_size_z = 1) in;

void main()
{
    uint index = gl_GlobalInvocationID.x;

    Particle particleIn = ParticlesIn[index];
    vec2 velocity = min(particleIn.Velocity * Speed, vec2(MaxSpeed));
    ParticlesOut[index].Position = particleIn.Position + velocity * DeltaTime;
    ParticlesOut[index].Velocity = particleIn.Velocity;
    ParticlesOut[index].Color = vec4(dot(particleIn.Velocity, vec2(MaxSpeed)), particleIn.Position.xy, 1.f);
    if (ParticlesOut[index].Position.x > 1.f)
    {
        ParticlesOut[index].Position.x = -1.f;
    }
    if (ParticlesOut[index].Position.y > 1.f)
    {
        ParticlesOut[index].Position.y = -1.f;
    }
}
